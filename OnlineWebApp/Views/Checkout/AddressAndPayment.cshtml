@model OnlineWebApp.Models.Order

@{
    /**/


    ViewBag.Title = "AddressAndPayment";
}
<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>
<div class="breacrumb-section">
    <div class="container">
        <div class="row">
            <div class="col-lg-12">
                <div class="breadcrumb-text product-more">
                    <a href="./index.html"><i class="fa fa-home"></i> Home</a>
                    <a href="./shop.html">Shop</a>
                    <span>Check Out</span>
                </div>
            </div>
        </div>
    </div>
</div>

<section class="checkout-section spad">
    <div class="container">
        <section action="#" class="checkout-form">
            <div class="row">

                @using (Html.BeginForm())
                {
                    @Html.AntiForgeryToken()
                    <div class="col-lg-6">
                        <h4>Biiling Details</h4>
                        <div class="row">


                            <div class="col-lg-6">
                                <label for="fir">First Name<span>*</span></label>
                                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                            </div>
                            <div class="col-lg-6">
                                <label for="last">Last Name<span>*</span></label>
                                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                            </div>
                            <div class="col-lg-6">
                                <label for="email">Email Address<span>*</span></label>
                                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                            </div>
                            <div class="col-lg-6">
                                <label for="phone">Phone<span>*</span></label>
                                @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control" } })
                            </div>
                            <div class="col-lg-6">
                                <label for="option">Collect<span>*</span></label>
                                @*@Html.RadioButtonFor(model => model.Option, "Collection", true)*@
                                <input type="radio" value="Collection" name="Option" id="collect" checked="checked" />
                            </div>
                            <div class="col-lg-6">
                                <label for="option">Delivery<span>*</span></label>
                                @*@Html.RadioButtonFor(model => model.Option, "Delivery", false)*@
                                <input type="radio" value="Delivery" name="Option" id="Deliver" />
                            </div>
                            @*<div class="col-lg-6">
                                <label for="Delivery">Address<span>*</span></label>*@
                            @*@Html.EditorFor(model => model.Option, new { htmlAttributes = new { @class = "form-control" } }*@
                            @Html.TextBoxFor(model => model.Option, new { id = "DeliverTextbox" } )
                            @*</div>*@


                        </div>
                    </div>
                    <div class="col-lg-6">
                        <div class="place-order">
                            <h4>Your Order</h4>
                            <div class="order-total">
                                @{Html.RenderAction("OrderdList", "ShoppingCart");}
                                @*<div class="payment-check">
                                        <div class="pc-item">
                                            <label for="pc-check">
                                                Cheque Payment
                                                <input type="checkbox" id="pc-check">
                                                <span class="checkmark"></span>
                                            </label>
                                        </div>
                                        <div class="pc-item">
                                            <label for="pc-paypal">
                                                Paypal
                                                <input type="radio" id="pc-paypal">
                                                <span class="checkmark"></span>
                                            </label>
                                        </div>
                                    </div>*@
                                <div class="order-btn">
                                    <input type="submit" class="site-btn place-btn" value="Place Order" />
                                </div>
                            </div>
                        </div>
                    </div>
                }
            </div>
        </section>
    </div>
</section>
@section Scripts {

    <script type="text/javascript">

        $(document).ready(function () {
            $("#DeliverTextbox").hide();
            $("input:radio[name=Option]").change(function () {
                if (this.value == "Delivery") {
                    $("#DeliverTextbox").show();
                }
                else {
                    $("#DeliverTextbox").hide();
                }
            });

            $("#DeliverTextbox").focusout(function () {
                $("input:radio[name=Option]:checked").attr('value', $("#DeliverTextbox").val());
            });

        });
    </script>

     <script>
      // This example displays an address form, using the autocomplete feature
      // of the Google Places API to help users fill in the information.

      // This example requires the Places library. Include the libraries=places
      // parameter when you first load the API. For example:
      // <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBZGjaEQZ9MFX5-6hhveE4tPhT5UqsCR2E&libraries=places">

      function initAutocomplete() {
        // Create the autocomplete object, restricting the search to geographical
        // location types.
          address = new google.maps.places.Autocomplete(
            @*/** @type {!HTMLInputElement} */*@(document.getElementById('DeliverTextbox')),
            {types: ['geocode']});

        // When the user selects an address from the dropdown, populate the address
        // fields in the form.
          address.addListener('place_changed', fillInAddress);
      }

      function fillInAddress() {
        // Get the place details from the autocomplete object.
          var place = address.getPlace();

        for (var component in componentForm) {
            document.getElementById(component).value = '';
            document.getElementById(component).disabled = false;
        }

        // Get each component of the address from the place details
        // and fill the corresponding field on the form.
        for (var i = 0; i < place.address_components.length; i++) {
          var addressType = place.address_components[i].types[0];
          if (componentForm[addressType]) {
            var val = place.address_components[i][componentForm[addressType]];
            document.getElementById(addressType).value = val;
          }
        }
      }

      // Bias the autocomplete object to the user's geographical location,
      // as supplied by the browser's 'navigator.geolocation' object.
      function geolocate() {
        if (navigator.geolocation) {
          navigator.geolocation.getCurrentPosition(function(position) {
            var geolocation = {
              lat: position.coords.latitude,
              lng: position.coords.longitude
            };
            var circle = new google.maps.Circle({
              center: geolocation,
              radius: position.coords.accuracy
            });
              address.setBounds(circle.getBounds());
          });
        }
      }
    </script>
    <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBZGjaEQZ9MFX5-6hhveE4tPhT5UqsCR2E&libraries=places&callback=initAutocomplete"
            async defer></script>
    <script>
        $(function () {
            var input = document.getElementById("DeliverTextbox");
            var address = new google.maps.places.Autocomplete(input);

            $('#my-modal').modal('show');

        });

    </script>


    @Scripts.Render("~/bundles/jqueryval")
}